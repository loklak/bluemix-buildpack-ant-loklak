#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# parse args
BUILD_DIR=$1
CACHE_DIR=$2

JAVA_DIST="openjdk-1.8.0_51"
JDK8_URL="https://download.run.pivotal.io/openjdk/lucid/x86_64/${JAVA_DIST}.tar.gz"

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

cd "$BUILD_DIR"

#jdk8
if [ -d .jdk8 ]; then
  echo "-----> .jdk8 folder found, moving along."

else
  echo -n "-----> .jdk8 folder not found! "
  if [[ -d "$CACHE_DIR/.jdk8" ]]; then
    echo -n "Copying jdk from cache to app... "
    cp -r "$CACHE_DIR/.jdk8" "$BUILD_DIR"
    echo "Done!"

  else
    echo -n "-----> Installing ${JAVA_DIST} build (to .jdk8)....."
    mkdir "$BUILD_DIR/.jdk8"
    cd "$BUILD_DIR/.jdk8"
    curl --max-time 180 --location "$JDK8_URL" | tar xz
    cd "$BUILD_DIR"
    echo "Done!"
  fi
fi

cd $BUILD_DIR

export JAVA_HOME="$BUILD_DIR/.jdk8"
export PATH="$JAVA_HOME/bin:$PATH"


if test -z "${JAVA_HOME}" ; then
  # JAVA_HOME is not set, try to set it if java is in PATH
  echo "ERROR: JAVA_HOME not found in your environment."
  echo "Please, set the JAVA_HOME variable in your environment to match the"
  echo "location of the Java Virtual Machine you want to use."
  exit
fi


# <BUILD_DIR> is (during this stage) a temporary directory. 
# During execution of your slug it'll be known as '/app'.


. $(dirname $0)/common


BIN_DIR=$(cd $(dirname $0); pwd) # absolute path

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}


#create the cache dir if it doesn't exist
mkdir -p $VENDORING_DIR

# change to vendoring dir to install apache ant
cd $VENDORING_DIR

if [ -x $ANT_HOME/bin/ant ] ; then
    #assuming Apache Ant is already installed...
	echo "-----> Using Apache Ant $ANT_VER....."
else
	echo "-----> Installing Apache Ant $ANT_VER..... [start]"
	curl --max-time 180 --location $ANT_URL | tar xz
	chmod +x $ANT_HOME/bin/ant
	echo "-----> Installing Apache Ant $ANT_VER..... [done ]!"
fi


if [ ! -f $BUILD_DIR/build.xml ] ; then
	echo "Failed to build app with Apache Ant"
fi


# change to build dir to run ant
cd ${BUILD_DIR}

export ANT_OPTS="-Xmx512m"

# build app
BUILDCMD="$ANT_HOME/bin/ant -Duser.home=${BUILD_DIR}"
echo "-----> executing $BUILDCMD"

$BUILDCMD 2>&1 | indent
ls -al ${PWD}  | indent

ls -al ${BUILD_DIR}  | indent

if [ "${PIPESTATUS[*]}" != "0 0" ]; then
  echo " !     Failed to build app with Apache Ant"
  exit 1
fi
